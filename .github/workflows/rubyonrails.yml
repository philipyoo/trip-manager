# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Rails CI"
on:
  push:
    branches: [ "main" ]
    paths:
      - backend/trip-manager-api/**
  pull_request:
    paths:
      - backend/trip-manager-api/**
defaults:
  run:
    working-directory: ./backend/trip-manager-api
env:
  PROJECT_DIR: ./backend/trip-manager-api
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: ${{env.PROJECT_DIR}}
      - name: Set up database schema
        run: bundle exec rake db:schema:load
      - name: Run tests
        run: bundle exec rake test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: ${{env.PROJECT_DIR}}
      - name: Security audit dependencies
        run: bundle exec bundle-audit check --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
